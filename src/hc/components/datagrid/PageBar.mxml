<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="25" xmlns:button="hc.controls.button.*"
		 horizontalAlign="right" verticalAlign="middle" 
		 xmlns:toolbar="hc.components.toolbar.*" 
		 xmlns:form="hc.components.form.*">
	<fx:Metadata>   
		[IconFile("/assets/icon/page/page.png")]
		[Event(name="pageChanged", type="hc.components.datagrid.PageChangedEvent")]
		[Style(name="pageFirstIcon", inherit="no", type="Class")]
		[Style(name="pagePrevIcon", inherit="no", type="Class")]
		[Style(name="pageNextIcon", inherit="no", type="Class")]
		[Style(name="pageLastIcon", inherit="no", type="Class")]
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.collections.IList;
            
            [Bindable]
            private var _pageArray:IList = new ArrayList();
            
            private var _pageSize:int = 15;//每页显示行数
            private var _rowCount:int = 0;//总记录数
            private var _totalPage:int = 1;//总页数
            private var _currPage:int = 1;//当前页数
            
			public function get pageSize():int
			{
				return _pageSize;
			}

			public function set pageSize(value:int):void
			{
				_pageSize = value;
			}
			
			public function get currPage():int{
				return _currPage;
			}
            
            //设置总记录数,每页显示记录数量，当前页
            public function setData(row_count:int, curr_page:int):void{
            	//总记录数
            	this._rowCount = row_count;
            	//总页数
				if(row_count>0 && pageSize>0){
					this._totalPage = Math.ceil(row_count / pageSize);
				}
				else{
					this._totalPage = 1;
				}
		        //当前页数
		        this._currPage = curr_page;
		        if(this._currPage>this._totalPage){
		        	goPage(this._totalPage);
		        }
		        
		        //清除下拉框
		        _pageArray.removeAll();
		        //填充下拉框
		        for(var i:int=1; i<=this._totalPage; i++){
		        	_pageArray.addItem({label:'第 ' + i + ' 页',id:i});
		        }
		        
				setPagingButtonStatus();
            }
            
            private function setPagingButtonStatus():void{
            	pageComboBox.selectedIndex = _currPage - 1;
            	pageLabel.text = this.pageSize+'条/页  共' + _totalPage + '页，' + this._rowCount + '条数据';
            	
            	pageFirst.enabled = (_currPage>1);
            	pagePrev.enabled = (_currPage>1);
            	pageNext.enabled = (_currPage<_totalPage);
            	pageLast.enabled = (_currPage<_totalPage);
            }
            
            //翻页
            private function goPage(pg:int):void{
            	if(pg<1){
            		pg = 1;
            	}else if(pg>_totalPage){
            		pg = _totalPage;
            	}
            	//调用翻页程序
        		var e:PageChangedEvent = new PageChangedEvent("pageChanged", pg, pageSize);
            	dispatchEvent(e);
            }
            
		]]>
	</fx:Script>
	
	<toolbar:ToolbarButton id="pageFirst" label="首页" icon="{getStyle('pageFirstIcon')}" click="goPage(1)"/>
	<toolbar:ToolbarButton id="pagePrev" label="上一页" icon="{getStyle('pagePrevIcon')}" click="goPage(_currPage-1)"/>
	<form:ComboBox width="70" id="pageComboBox" dataProvider="{_pageArray}" change="goPage(pageComboBox.selectedItem.id)"/>
	<toolbar:ToolbarButton id="pageNext" label="下一页" icon="{getStyle('pageNextIcon')}" click="goPage(_currPage+1)"/>
	<toolbar:ToolbarButton id="pageLast" label="末页" icon="{getStyle('pageLastIcon')}" click="goPage(_totalPage)"/>
	<s:Label id="pageLabel" text="15条/页  共0页，0条数据" minWidth="150" textAlign="right" paddingRight="5"/>
</s:HGroup>
